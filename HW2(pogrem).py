# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

# Решение

# spisok = [True, 2, 4.321, 'trup', 'root']
# for i in range(len(spisok)):
#     print(type(spisok[i]))

# 2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов нужно использовать функцию input().

# Решение

# a = []
# for i in range(int(input('Введите количество цифр в строке: '))):
#     a.append(int(input('Введите число - элемент строки: ')))
# print(a)
# if len(a) % 2 == 0:
#     for i in range(int(len(a)/2)):
#         a[2*i], a[2*i+1] = a[2*i+1], a[2*i]
# else:
#     for i in range(int((len(a)-1)/2)):
#         a[2*i], a[2*i+1] = a[2*i+1], a[2*i]
# print(a)
# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.

# Решение

# month = int(input('Введите число от 1 до 12: '))
# winter = [12, 1, 2]
# spring = [3, 4, 5]
# summer = [6, 7, 8]
# autumn = [9, 10, 11]
# if month in winter:
#     print('Зима')
# elif month in spring:
#     print('Весна')
# elif month in summer:
#     print('Лето')
# elif month in autumn:
#     print('Осень')
# else:
#     print('Ошибка ввода')
# month = int(input('Введите число от 1 до 12: '))
# d = {'Зима': [12, 1, 2], 'Весна': [3, 4, 5], 'Лето': [6, 7, 8],'Осень': [9, 10, 11]}
# # d = {'winter': '12, 1, 2', 'spring': '3, 4, 5', 'summer': '6, 7, 8','autumn': '9, 10, 11'}
# for key, val in d.items():
#     if month in val:
#         print(key)

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

# Решение

# vvod = str(input('Введите строку ' ))
# lvvod = vvod.split(" ")
# for i in range(len(lvvod)):
#     n = lvvod[i]
#     print(f'{i+1}. {n[:10]}')

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
# с тем же значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

# Решение

# my_list = [7, 5, 3, 3, 2]
# dig= int(input('Введите натуральное число: '))
# my_list.append(dig)
# print(sorted(my_list, reverse=True))

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество,
# единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.
#
# Пример готовой структуры:
#
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название.
# Тогда значение — список значений-характеристик, например, список названий товаров.
#
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

# Решение

# d1 = {}
# l2 = []
# for i in range(int(input('Введите количество товаров: '))):
#     d1["название"]= str(input('Введите название товара: '))
#     d1["цена"] = int(input('Введите цену товара: '))
#     d1["количество"] = int(input('Введите количества товара: '))
#     d1["ед"] = str(input('Введите еденицу товара: '))
#     l1 = []
#     l1.append(i+1)
#     l1.append(d1)
#     t1=tuple(l1)
#     l2.append(t1)
# print(l2)
#
# d2 = {}
# l_name=[]
# l_price=[]
# l_number=[]
# l_ed=[]
# for i in l2:
#     dp = (i[1])
#     l_name.append(dp.get('название'))
#     l_price.append(dp.get('цена'))
#     l_number.append(dp.get('количество'))
#     l_ed.append(dp.get('ед'))
# d_rez = dict()
# d_rez["название"] = l_name
# d_rez["цена"] = l_price
# d_rez["количество"] = l_number
# d_rez["ед"] = l_ed
# print(d_rez)

